`timescale 1ns / 1ps

module tb_Feistel_Simple;
      	reg  [31:0] R_in;
      	reg  [47:0] subkey;
      	wire [31:0] f_out;
	
	reg [31:0] expected_out;

      	Feistel_Function DUT (.R_in(R_in), .subkey(subkey), .f_out(f_out));

      	initial begin
		// DES Round 0 test
 		$display("\n========================================");
  		$display("Test Case: DES Round 0");
 		$display("========================================\n");
		R_in = 32'b1000_0000_0110_0110_1000_0000_0110_0110;
		subkey = 48'b0011_1000_1010_1100_1110_1111_0100_0110_0101_0110_0100_1010;
		expected_out = 32'b0100_1011_0111_1101_1101_0011_1000_0010;
          	#10;
          	if (f_out == expected_out)
              	$display("PASS: f_out = %h", f_out);
          	else
              	$display("FAIL: f_out = %h", f_out);

		#10
		// DES Round 1 test
 		$display("\n========================================");
  		$display("Test Case: DES Round 1");
 		$display("========================================\n");
		R_in = 32'b0011_0011_0010_1000_1010_1011_1101_0111;
		subkey = 48'b1000_1001_1011_1110_1101_0100_0100_1000_1001_1101_0001_0010;
		expected_out = 32'b1101_0011_1111_1100_1010_1001_0111_0011;
          	#10;
          	if (f_out == expected_out)
              	$display("PASS: f_out = %h", f_out);
          	else
              	$display("FAIL: f_out = %h", f_out);


		#10
		// DES Round 2 test
 		$display("\n========================================");
  		$display("Test Case: DES Round 2");
 		$display("========================================\n");
		R_in = 32'b0101_0011_1001_1010_0010_1001_0001_0101;
		subkey = 48'b0101_0100_0111_1110_1110_1110_0100_1101_0100_0100_0011_1100;
		expected_out = 32'b0011_1011_1011_0111_1011_0100_1110_1111; 
          	#10;
          	if (f_out == expected_out)
              	$display("PASS: f_out = %h", f_out);
          	else
              	$display("FAIL: f_out = %h", f_out);


		  #10
  		// DES Round 3 test
   		$display("\n========================================");
    		$display("Test Case: DES Round 3");
   		$display("========================================\n");
  		R_in = 32'b0000_1000_1001_1111_0001_1111_0011_1000;
  		subkey = 48'b1111_0111_1110_0001_1001_1110_1100_0110_1011_0001_0011_1000;
  		expected_out = 32'b1100_1000_0100_1111_1111_1111_1111_1100;
            	#10;
            	if (f_out == expected_out)
                	$display("PASS: f_out = %h", f_out);
            	else
                	$display("FAIL: f_out = %h", f_out);


      	end
  endmodule


